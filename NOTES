map:
lab1: bootstrap, trap/interrupt handling, physical memory allocation
lab2: multiprocessors, threads, and synchronization
lab3: virtual memory, copy-on-write
lab4: program loading, process reconciliation
lab5: file system and checkpointing
lab6: student-defined


lab2
~~~~

Implement a simple multiprocessor scheduler.

Challenge!  Implement an interesting prioritization algorithm,
such as Unix-style variable priority, lottery/stride scheduling, etc.
And/or implement an efficient work-stealing scheduler
that avoids scheduler contention when there's plenty of work to go around.

Implement mutexes.
Semantics: only one thread may own a mutex at once.
Mutexes do NOT support recursive locking.
If a thread attempts to lock a mutex that the same thread already owns,
the mutex implementation must detect this situation and panic.
Similarly, if a thread attempts to release a mutex it does not own,
the mutex implementation must detect this situation and panic.

Challenge!  Implement mutexes in such a way that the common case
of acquiring an uncontended mutex is no more costly
than acquiring a spinlock and requires nothing
but an atomic exchange or ``test-and-set''.
Be careful about race conditions when one thread is unlocking a mutex
and other is trying to acquire it.

Challenge!  Add saving/restoring of FPU and SSE state using FXSAVE/FXRESTORE.
Further challenge: save/restore FPU/SSE state lazily.
(Especially challenging on a multiprocessor; requires CPU shootdown.)



---
28-Mar-10

On building a cross-compiler for PIOS...

configure command line for binutils:
../configure --target=pios --prefix=$HOME/det/pios/xc --disable-werror

configure command line for gcc:
../configure --target=pios --prefix=$HOME/det/pios/xc --enable-languages=c

might also need:
../configure --target=i386-elf --disable-nls --without-headers --with-newlib --disable-threads --disable-shared --disable-libmudflap --disable-libssp : (reconfigured) ../configure --target=i386-elf --enable-languages=c --disable-nls --without-headers --with-newlib --disable-threads --disable-shared --disable-libmudflap --disable-libssp
