divert(-1)
define(NEWPROC,) dnl

define(BARRIER, `{
	pthread_barrier_wait(&($1));
}')

define(BARDEC, `
pthread_barrier_t	($1);
')

define(BARINIT, `{
	pthread_barrier_init(&($1), NULL, $2);
}')

define(BAREXCLUDE, ` ')

define(BARINCLUDE, ` ')

define(LOCKDEC, ` ');
define(LOCKINIT, ` ')
define(LOCK, ` ')
define(UNLOCK, ` ')

define(IDLOCK, `$3 = pthread_self();')

define(ALOCKDEC, ` ')
define(ALOCKINIT, ` ')
define(ALOCK, ` ')
define(AULOCK, ` ')

define(PAUSEDEC, ` ')
define(PAUSEINIT, ` ')
define(CLEARPAUSE, ` ')
define(SETPAUSE, ` ')
define(EVENT, ` ')
define(WAITPAUSE, ` ')
define(PAUSE, ` ')

define(AUG_ON, ` ')
define(AUG_OFF, ` ')
define(TRACE_ON, ` ')
define(TRACE_OFF, ` ')
define(REF_TRACE_ON, ` ')
define(REF_TRACE_OFF, ` ')
define(DYN_TRACE_ON, ` ')
define(DYN_TRACE_OFF, ` ')
define(DYN_REF_TRACE_ON, ` ')
define(DYN_REF_TRACE_OFF, ` ')
define(DYN_SIM_ON, ` ')
define(DYN_SIM_OFF, ` ')
define(DYN_SCHED_ON, ` ')
define(DYN_SCHED_OFF, ` ')
define(AUG_SET_LOLIMIT, ` ')
define(AUG_SET_HILIMIT, ` ')

define(MENTER, ` ')
define(DELAY, ` ')
define(CONTINUE, ` ')
define(MEXIT, ` ')
define(MONINIT, ` ')

define(WAIT_FOR_END, `{
	long	i, Error;
	for (i = 0; i < ($1); i++) {
		Error = pthread_join(PThreadTable[i], NULL);
		if (Error != 0) {
			printf("Error in pthread_join().\n");
			exit(-1);
		}
	}
}')

define(CREATE, `{
	long	i, Error;

	for (i = 0; i < ($2); i++) {
		Error = pthread_create(&PThreadTable[i], NULL, (void * (*)(void *))($1), NULL);
		if (Error != 0) {
			printf("Error in pthread_create().\n");
			exit(-1);
		}
	}

}')

define(MAIN_INITENV, ` ')
define(MAIN_END, `{exit(0);}')

define(MAIN_ENV,`
#include <inc/stdio.h>
#include <inc/math.h>
#include <inc/pthread.h>
#include <inc/time.h>
#include <inc/unistd.h>
#include <inc/stdlib.h>
#include <inc/malloc.h>
#define MAX_THREADS 32
pthread_t PThreadTable[MAX_THREADS];
')

define(ENV, ` ')
define(EXTERN_ENV, `
#include <inc/stdio.h>
#include <inc/math.h>
#include <inc/pthread.h>
#include <inc/time.h>
#include <inc/unistd.h>
#include <inc/stdlib.h>
#include <inc/malloc.h> // NOT IMPLEMENTED
extern pthread_t PThreadTable[];
')

define(G_MALLOC, `malloc($1);')
define(G_FREE, ` ')
define(G_MALLOC_F, `malloc($1)')

define(GET_HOME, `{($1) = 0;}')
define(GET_PID, `{($1) = 0;}')
define(AUG_DELAY, `{sleep ($1);}')
define(ST_LOG, ` ')
define(SET_HOME, ` ')
define(CLOCK, `{
	struct timeval	FullTime;

	gettimeofday(&FullTime, NULL);
	($1) = (unsigned long)(FullTime.tv_usec + FullTime.tv_sec * 1000000);
}')
divert(0)
